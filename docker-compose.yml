version: '3.4'
services:

  #PHP Service
  app:
    container_name: php
    image: docker/laravel:v1
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
    depends_on:
      - db
    networks:
      - app-network
      - redis-network
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:9000 || exit 1z
      interval: 30s
      timeout: 10s
      retries: 5

  #Nginx Service
  webserver:
    container_name: nginx
    image: nginx:1.17-alpine
    restart: unless-stopped
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
      - db
    networks:
      - app-network
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:80 || exit 1z
      interval: 30s
      timeout: 10s
      retries: 5

  #MYSQL SERVICE    
  db:
    image: mysql:5.7
    container_name: mysql
    ports: 
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOTPASSWORD}
    volumes:
      - ./mysql/data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10
 
  #REDIS SERVICE
  redis:
    image: redis:5-alpine
    container_name: redis
    volumes:
      - ./redis/data:/data
    restart: unless-stopped
    networks:
      - redis-network
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 5

# NETWORK
networks:
  app-network:
    name: app-network
    driver: "bridge"

  redis-network:
    name: redis-network
    driver: "bridge"